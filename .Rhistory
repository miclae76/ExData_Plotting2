seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each = 10)
c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
tf2 <- num_vect >=6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_Char, collapse = " ")
paste(my_char, collapse = " ")
my_name <- c(my_char, "Michael")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep ="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_na <- my_data == NA
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf
| = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <-  c("foo", "bar", "norf")
?identical
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c( "patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(my_data)
colnames(my_data) <-cnames
my_data
savehistory
?savehistory
savehistory(file = ".Rhistory")
data <- read.csv("hw1_data.csv")
data <- read.csv("hw1_data.csv")
data
data[1:2]
data
nrows(data)
head(data, 2)
tail (data, 2)
nrow (data)
ncol(data)
data[47]
data{47}
data
data[47]
data[47,]
OzoneNotNA <- data[$Ozone!=NA,]
OzoneNotNA <- data[data$Ozone!=NA,]
OzoneNotNA
data.cleaned <- data[!is.na(data$Ozone)]
data.cleaned <- data[!is.na(data$Ozone),]
data.cleaned
nrow(data.cleaned)
mean(data.cleaned$Ozone)
getwd()
> outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
> head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
> head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
source('D:/Coursera/WD/best.R')
best("al","heart attack")
best("al","Heart.Attack")
best("al","heart attack")
source('D:/Coursera/WD/best.R')
best("al","heart attack")
best("xyz","heart attack")
best("xyz","heart attak")
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 5000)
rankhospital("TX", "heart failure", "best")
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 3)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 3)
rankhospital("TX", "heart failure", 4)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
head(data)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('D:/Coursera/WD/rankhospital.R')
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source('D:/Coursera/WD/rankhospital.R')
source('D:/Coursera/WD/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('D:/Coursera/WD/rankall.R')
head(rankall("heart attack", 20), 10)
source('D:/Coursera/WD/rankall.R')
head(rankall("heart attack", 20), 10)
source('D:/Coursera/WD/rankall.R')
q
source('D:/Coursera/WD/rankall.R')
head(rankall("heart attack", 20), 10)
source('D:/Coursera/WD/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure", 10))
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
rankall("pneumonia", "worst")
source('D:/Coursera/WD/rankall.R')
source('D:/Coursera/WD/rankall.R')
source('D:/Coursera/WD/rankall.R')
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
q
q
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('~/.active-rstudio-document')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
submit()
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
submit()
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
submit()
submit()
source('C:/Users/Michael/AppData/Local/Temp/Temp1_Getting-and-Cleaning-Data-master.zip/Getting-and-Cleaning-Data-master/Quiz 3/quiz.r')
### Quiz 3
setwd("D:/Coursera/WD")
if (!file.exists("data")) {
dir.create("data")
}
## Question 1
url2 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url2, destfile = "./data/hid.csv")
hid = read.csv("./data/hid.csv")
str(hid)
# Create a logical vector that identifies the households on greater than 10 acres who sold more than $10,000 worth of agriculture products
agricultureLogical = (with(hid, ACR==3 & AGS==6))
str(agricultureLogical)
which(agricultureLogical)
# download the image
url1 = "http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url1, destfile = "./data/jeff.jpg")
list.files("./data")
install.packages("jpeg")
library("jpeg")
pic = readJPEG("./data/jeff.jpg", native = "TRUE")
head(pic)
summary(pic)
str(pic)
quantile(pic, probs = c(30, 50, 80)/100)
url1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url1, destfile = "./data/jeff.jpg")
list.files("./data")
pic = readJPEG("./data/jeff.jpg", native = "TRUE")
head(pic)
summary(pic)
str(pic)
quantile(pic, probs = c(30, 50, 80)/100)
pic = readJPEG("./data/jeff.jpg", native = TRUE)
head(pic)
summary(pic)
str(pic)
quantile(pic, probs = c(30, 50, 80)/100)
url1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url1, destfile = "./data/jeff.jpg", method = "curl" , mode = "wb")
list.files("./data")
install.packages("jpeg")
library("jpeg")
install.packages("jpeg")
install.packages("RCurl")
url1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url1, destfile = "./data/jeff.jpg", method = "curl" , mode = "wb")
list.files("./data")
pic = readJPEG("./data/jeff.jpg", native = TRUE)
head(pic)
summary(pic)
str(pic)
quantile(pic, probs = c(30, 50, 80)/100)
url3 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url4 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3, destfile = "./data/gdp.csv")
download.file(url4, destfile = "./data/education.csv")
gdp = read.csv("./data/gdp.csv",skip=1)
edu = read.csv("./data/education.csv")
labels(gdp)
labels(edu)
gdp
str(gdp[100,1])
str(edu)
table(gdp$X, gdp$Gross.domestic.product.2012)
str(edu$CountryCode)
attributes(edu$CountryCode)
y = levels(edu$CountryCode)
str(gdp$X)
attributes(gdp$X)
x = levels(gdp$X)
# how many codes match
table(gdp$X %in% edu$CountryCode)
library(plyr)
#rename columns
gdp$X.8 = NULL
gdp$X.7 = NULL
gdp$X.6 = NULL
gdp$X.2 = NULL
gdp = rename(gdp, c(X="CountryCode", "GDP"="Rank", X.3= "Description", X.4="GDP", X.5="Extra"))
str(gdp)
table(x %in% y)
# sort
gdp[with(gdp, order(GDP)), ]
x = gdp[1:193,]
y = subset(edu, CountryCode != " ")
x
table(gdp$X %in% edu$CountryCode)
str(x)
str(y)
table(y$CountryCode %in% x$CountryCode)
order.gdp <- order(gdp$GDP)
order.gdp
head(gdp$GDP[order.gdp])
gdp[gdp$Rank,]
labels(edu)
levels(edu$Income.Group)
url3 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url4 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3, destfile = "./data/gdp.csv")
download.file(url4, destfile = "./data/education.csv")
gdp = read.csv("./data/gdp.csv",skip=1)
edu = read.csv("./data/education.csv")
labels(gdp)
labels(edu)
gdp
str(gdp[100,1])
str(edu)
table(gdp$X, gdp$Gross.domestic.product.2012)
str(edu$CountryCode)
attributes(edu$CountryCode)
y = levels(edu$CountryCode)
str(gdp$X)
attributes(gdp$X)
x = levels(gdp$X)
# how many codes match
table(gdp$X %in% edu$CountryCode)
library(plyr)
#rename columns
gdp$X.8 = NULL
gdp$X.7 = NULL
gdp$X.6 = NULL
gdp$X.2 = NULL
gdp = rename(gdp, c(X="CountryCode", "GDP"="Rank", X.3= "Description", X.4="GDP", X.5="Extra"))
str(gdp)
table(x %in% y)
# sort
gdp[with(gdp, order(GDP)), ]
x = gdp[1:193,]
y = subset(edu, CountryCode != " ")
x
url3 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url4 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3, destfile = "./data/gdp.csv")
download.file(url4, destfile = "./data/education.csv")
gdp = read.csv("./data/gdp.csv",skip=1)
edu = read.csv("./data/education.csv")
labels(gdp)
labels(edu)
gdp
str(gdp[100,1])
str(edu)
table(gdp$X, gdp$Gross.domestic.product.2012)
str(edu$CountryCode)
attributes(edu$CountryCode)
y = levels(edu$CountryCode)
str(gdp$X)
attributes(gdp$X)
x = levels(gdp$X)
# how many codes match
table(gdp$X %in% edu$CountryCode)
labels(gdp)
labels(edu)
labels(gdp)
table(gdp$X, gdp$Gross.domestic.product.2012)
str(gdp$X)
attributes(gdp$X)
x = levels(gdp$X)
cx <- unique(gdp[,1])
cx
cx <- as.string.unique(gdp[,1])
cx <- as.string(unique(gdp[,1]))
cx <- as.character(unique(gdp[,1]))
cx
y
# how many codes match
table(cx %in% edu$CountryCode)
table(edu$CountryCode %in% cx)
names(gdp)
names(edu)
gdp = rename(gdp, c("CountryCode"="CountryCode1"))
mergedData = merge(gdp, edu)
str(mergedData)
attributes(mergedData$Income.Group)
levels(gdp$Rank)
result = subset(mergedData, Income.Group == "Lower middle income")
str(result)
table(result)
as.numeric(mergedData$Rank)
result$Rank
q()
getwd()
setwd("D:/Coursera/Repository/ExData_Plotting2")
# EDA - Course Project 2 - Plot 3
source.with.encoding('D:/Coursera/Repository/ExData_Plotting2/plot4.R', encoding='UTF-8')
source.with.encoding('D:/Coursera/Repository/ExData_Plotting2/plot4.R', encoding='UTF-8')
source.with.encoding('D:/Coursera/Repository/ExData_Plotting2/plot4.R', encoding='UTF-8')
source('~/.active-rstudio-document')
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
# EDA - Course Project 2 - Plot 3
# Across the United States, how have emissions from coal combustion-related sources changed from 1999-2008?
library(plyr)
library(ggplot2)
# Read the data file
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
# First extract all source codes corresponding to coal combustion
# The EI.Sector field looks like the most direct way to determine this
#CoalCombustionSCC <- subset(SCC, EI.Sector %in% c("Fuel Comb - Comm/Institutional - Coal",
#                                               "Fuel Comb - Electric Generation - Coal",
#                                               "Fuel Comb - Industrial Boilers, ICEs - Coal"))
# This may omit some.  For example, see 242
# Compare to Short.Name matching both Comb and Coal
CoalComb <- subset(SCC, grep("Comb", Short.Name) & grep("Coal", Short.Name))
# EDA - Course Project 2 - Plot 3
# Across the United States, how have emissions from coal combustion-related sources changed from 1999-2008?
library(plyr)
library(ggplot2)
# Read the data file
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
# First extract all source codes corresponding to coal combustion
# The EI.Sector field looks like the most direct way to determine this
#CoalCombustionSCC <- subset(SCC, EI.Sector %in% c("Fuel Comb - Comm/Institutional - Coal",
#                                               "Fuel Comb - Electric Generation - Coal",
#                                               "Fuel Comb - Industrial Boilers, ICEs - Coal"))
# This may omit some.  For example, see 242
# Compare to Short.Name matching both Comb and Coal
SCC.Comb <- subset(SCC, grep("Comb", Short.Name))
SCC.CombCoal <- subset(SCC.Comb, grep("Coal", Short.Name))
# EDA - Course Project 2 - Plot 4
# Across the United States, how have emissions from coal combustion-related sources changed from 1999-2008?
library(plyr)
library(ggplot2)
# Read the data file
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
# First extract all source codes corresponding to coal combustion
# The EI.Sector field looks like the most direct way to determine this
#CoalCombustionSCC <- subset(SCC, EI.Sector %in% c("Fuel Comb - Comm/Institutional - Coal",
#                                               "Fuel Comb - Electric Generation - Coal",
#                                               "Fuel Comb - Industrial Boilers, ICEs - Coal"))
# This may omit some.  For example, see 242
# Compare to Short.Name matching both Comb and Coal
SCC.Comb <- subset(SCC, grepl("Comb", Short.Name))
SCC.CombCoal <- subset(SCC.Comb, grepl("Coal", Short.Name))
SCC.CombCoal
nrows(SCC.CombCoal)
nrow(SCC.CombCoal)
str(SCC.CombCoal)
# EDA - Course Project 2 - Plot 4
# Across the United States, how have emissions from coal combustion-related sources changed from 1999-2008?
library(plyr)
library(ggplot2)
# Read the data file
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
# First extract all source codes corresponding to coal combustion
# The EI.Sector field looks like the most direct way to determine this
#CoalCombustionSCC <- subset(SCC, EI.Sector %in% c("Fuel Comb - Comm/Institutional - Coal",
#                                               "Fuel Comb - Electric Generation - Coal",
#                                               "Fuel Comb - Industrial Boilers, ICEs - Coal"))
# This may omit some.  For example, see 242
# Compare to Short.Name matching both Comb and Coal
SCC.Comb <- subset(SCC, grepl("Combustion", SCC.Level.One, ignore.case=TRUE))
SCC.CombCoal <- subset(SCC.Comb, grepl("Coal", SCC.Level.Three, ignore.case=TRUE))
str(SCC.CombCoal)
data<-merge(SCC.CombCoal, NEI, by="SCC")
head(data)
# EDA - Course Project 2 - Plot 4
# Across the United States, how have emissions from coal combustion-related sources changed from 1999-2008?
library(plyr)
library(ggplot2)
# Read the data file
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
# Extractextract all source codes corresponding to coal combustion
SCC.Comb <- subset(SCC, grep("Combustion", SCC.Level.One, ignore.case=TRUE))
SCC.CombCoal <- subset(SCC.Comb, grep("Coal", SCC.Level.Three, ignore.case=TRUE))
source('D:/Coursera/Repository/ExData_Plotting2/plot4.R')
source('D:/Coursera/Repository/ExData_Plotting2/plot4.R')
print(q)
devoff()
dev.off()
