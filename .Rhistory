?rnorm
help.search("nor")
args("rnorm")
rnorm
getwd()
setwd("D:/Coursera/WD")
getwd()
mean(x)
myfunction <- function () {
x <- rnorm(100)
mean(x)
}
myfunction()
myfunction()
source('myFirstFunction.R')
ls
ls()
myfunction()
myfunction()
x <- 2
x
x <- "gell"
x
c <- ##hhfhkh
f
c <- ## hhfhkh
5
c
y <- 1:20
y
z <- 2:15:2
z <- 2:15,2
z <- 2:15
z
x <- c(1,2,5,7)
x
x <- c(1,2,5, "abc")
x
x <- c(1,2,5.4, "abc")
x
z <- c(TRUE, 2)
z
z <- c(TRUE, "a")
z
mat <- matrix(nrow=3, ncol=4)
mat
dim(mat)
mat <- matrix(1:20, nrow=3, ncol=4)
mat <- matrix(1:12, nrow=3, ncol=4)
mat <- matrix(1:12, nrow=3, ncol=4)
mat
zz <- list(1, "hello", z)
zz
z <- 2:5
zz <- list(1, "hello", z)
zz
x <- data.frame(foo = 1:4, bar = c(T, T, F, T))
x
x[$foo>2]
x[$(foo)>2]
x <- list(foo=1:4, bar=0.6)
x
x$bar
x$foo
x <- c(1,2,NA, 4, NA, 5)
y <- x>3
y
> install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z *2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z *2 + 1000
my_sqrt
my_div
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each = 10)
c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
tf2 <- num_vect >=6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_Char, collapse = " ")
paste(my_char, collapse = " ")
my_name <- c(my_char, "Michael")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep ="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_na <- my_data == NA
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf
| = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <-  c("foo", "bar", "norf")
?identical
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c( "patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(my_data)
colnames(my_data) <-cnames
my_data
savehistory
?savehistory
savehistory(file = ".Rhistory")
data <- read.csv("hw1_data.csv")
data <- read.csv("hw1_data.csv")
data
data[1:2]
data
nrows(data)
head(data, 2)
tail (data, 2)
nrow (data)
ncol(data)
data[47]
data{47}
data
data[47]
data[47,]
OzoneNotNA <- data[$Ozone!=NA,]
OzoneNotNA <- data[data$Ozone!=NA,]
OzoneNotNA
data.cleaned <- data[!is.na(data$Ozone)]
data.cleaned <- data[!is.na(data$Ozone),]
data.cleaned
nrow(data.cleaned)
mean(data.cleaned$Ozone)
getwd()
> outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
> head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
> head(outcome)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
source('D:/Coursera/WD/best.R')
best("al","heart attack")
best("al","Heart.Attack")
best("al","heart attack")
source('D:/Coursera/WD/best.R')
best("al","heart attack")
best("xyz","heart attack")
best("xyz","heart attak")
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 5000)
rankhospital("TX", "heart failure", "best")
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 3)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 3)
rankhospital("TX", "heart failure", 4)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
head(data)
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('D:/Coursera/WD/rankhospital.R')
source('D:/Coursera/WD/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source('D:/Coursera/WD/rankhospital.R')
source('D:/Coursera/WD/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('D:/Coursera/WD/rankall.R')
head(rankall("heart attack", 20), 10)
source('D:/Coursera/WD/rankall.R')
head(rankall("heart attack", 20), 10)
source('D:/Coursera/WD/rankall.R')
q
source('D:/Coursera/WD/rankall.R')
head(rankall("heart attack", 20), 10)
source('D:/Coursera/WD/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure", 10))
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
rankall("pneumonia", "worst")
source('D:/Coursera/WD/rankall.R')
source('D:/Coursera/WD/rankall.R')
source('D:/Coursera/WD/rankall.R')
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
q
q
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('~/.active-rstudio-document')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
submit()
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
submit()
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('D:/Coursera/WD/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
submit()
submit()
SCC
# Exploratory Data Analysis
# Project 2
# Clean upworkspace
rm(list=ls())
library("plyr")
library("ggplot2")
# Load data
NEI <- readRDS("~/Downloads/exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("~/Downloads/exdata-data-NEI_data/Source_Classification_Code.rds")
# EDA - Course Project 2 - Plot 1
##Use plyr package for data manipulation : http://cran.r-project.org/web/packages/plyr/plyr.pdf
library("plyr")
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("data/summarySCC_PM25.rds")
SCC <- readRDS("data/Source_Classification_Code.rds")
setwd("D:/Coursera/Repository/ExData_Plotting2")
SCC <- readRDS("data/Source_Classification_Code.rds")
head(SCC)
summary(SCC)
unique(SCC[,3])
unique(SCC$SCC.Level.One)
unique(SCC$SCC.Level.Three)
combustion<-as.data.frame(SCC[grep("combustion",SCC$SCC.Level.One,ignore.case=T) &
grep("coal",SCC$SCC.Level.Three,ignore.case=T),1])
combustion<-as.data.frame(SCC[grep("combustion",SCC$SCC.Level.One,ignore.case=T) &
grep("coal",SCC$SCC.Level.Three,ignore.case=T),1])
grep("coal",SCC$SCC.Level.Three,ignore.case=T)
coal.rows <-grep("coal",SCC$SCC.Level.Three,ignore.case=T)
SCC[coal.rows, ]
summary(SCC)
unique(SCC$SCC.Level.one)
unique(SCC$SCC.Level.One)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
htmlcode
htmcode[10]
htmlcode
source('~/.active-rstudio-document')
htmlcode
source('~/.active-rstudio-document')
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
source('~/.active-rstudio-document')
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
#    Insert your values below - if secret is omitted, it will look it up in
#    the GITHUB_CONSUMER_SECRET environmental variable.
#
#    Use http://localhost:1410 as the callback url
myapp <- oauth_app("github", "cf4088c4a988120b041d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
#    Insert your values below - if secret is omitted, it will look it up in
#    the GITHUB_CONSUMER_SECRET environmental variable.
#
#    Use http://localhost:1410 as the callback url
myapp <- oauth_app("github", "cf4088c4a988120b041d")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
